Git 教程

cd /d/abc 进入abc文件夹

创建版本库
    创建空目录后使用“git init”将目录变成可管理的仓库
    添加文件到目录： 1.git add readme.txt      将文件添加到仓库
                    2.git commit -m "(提交说明)"
                    一次提交多个文件时
                        $ git add file1.txt
                        $ git add file2.txt file3.txt
                        $ git commit -m "add 3 files."
时光机穿梭
    git status  掌握仓库当前状态
    git diff readme.txt  查看修改内容
    版本回退
        git log 查看历次修改纪律
        git log --pretty = online
        git reset --hard HEAD^ 版本回退到上一个版本
        git reset --hard 1094a 版本回退到1094a版本
        git reflog 记录每一次命令

    工作区和暂存区
    
    管理修改
        Git跟踪并管理的是修改，而非文件
        git checkout -- readme.txt 让这个文件回到最近一次git commit 或 git add时的状态
                                    用版本库替换工作区的版本

    删除文件
        rm test.txt
        git rm text.txt 从版本库里删除
        git commit 提交


远程仓库
    在用户主目录下 ssh-keygen -t rsa -C "youremail@example.com" 创建SSH key
    添加远程库
        git remote add origin git@github.com:michaelliao/learngit.git 把本仓库推送到git仓库
        git push -u origin master 把本地库所有内容推送到远程
            我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
        it push origin master 以后本地修改后通过此命令推送    
    从远程库克隆
        git clone git@github.com:michaelliao/gitskills.git 在某个文件夹下进行克隆

分支管理
    创建与合并分支
        git checkout -b dev 创建dev分支，切换到dev分支
                     -b 表示创建并切换 == git branch dev 创建分支  git checkout dev 切换分支
        git branch 查看当前分支
        git branch -d dev 删除dev分支
        

    